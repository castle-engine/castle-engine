# ----------------------------------------------------------------------------
# GitHub Action workflow to
# - test CGE compilation and automatic tests
# - pack CGE into zip
# Uses CGE Docker image https://hub.docker.com/r/kambi/castle-engine-cloud-builds-tools/ .
#
# See https://docs.github.com/en/actions for docs.
# ----------------------------------------------------------------------------

name: Test and Pack
on: [push, pull_request]

# setup.sh inside Docker requires using bash
defaults:
  run:
    shell: bash

jobs:
  test-compiler-independent:
    name: Compiler-Independent Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set environment
        run: echo "CASTLE_ENGINE_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
      - name: Shell Tests
        run: ./tools/internal/cge_shell_tests

  test-fpc-stable:
    name: Base Tests (FPC Stable)
    runs-on: ubuntu-latest
    # Use Docker image with CGE prerequisites (FPC, Lazarus, Android tools etc.)
    # See https://hub.docker.com/r/kambi/castle-engine-cloud-builds-tools/ .
    container: kambi/castle-engine-cloud-builds-tools:cge-none
    steps:
      - uses: actions/checkout@v3
      # Set env CASTLE_ENGINE_PATH following
      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#environment-files
      # https://brandur.org/fragments/github-actions-env-vars-in-env-vars
      - name: Set environment
        run: echo "CASTLE_ENGINE_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
      - name: Build Tools (FPC Stable)
        run: make clean default
      - name: Build And Run Auto-Tests (FPC Stable)
        run: make clean tests
      - name: Build Using FpMake (FPC Stable)
        run: make clean test-fpmake

  test-fpc-stable-examples:
    name: Examples (FPC Stable)
    runs-on: ubuntu-latest
    container: kambi/castle-engine-cloud-builds-tools:cge-none
    steps:
      - uses: actions/checkout@v3
      - name: Set environment
        run: echo "CASTLE_ENGINE_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
      - name: Build Examples (FPC Stable)
        run: make clean examples CASTLE_CONSERVE_DISK_SPACE=true

  test-fpc-stable-examples-laz:
    name: Examples Using Lazarus (FPC / Lazarus Stable)
    runs-on: ubuntu-latest
    container: kambi/castle-engine-cloud-builds-tools:cge-none
    steps:
      - uses: actions/checkout@v3
      - name: Set environment
        run: echo "CASTLE_ENGINE_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      # Avoids GIT errors
      #   fatal: detected dubious ownership in repository at '/__w/castle-engine/castle-engine'
      #   To add an exception for this directory, call:
      #   git config --global --add safe.directory /__w/castle-engine/castle-engine
      #
      # See https://stackoverflow.com/questions/72978485/git-submodule-update-failed-with-fatal-detected-dubious-ownership-in-repositor
      # https://github.com/git/git/commit/8959555cee7ec045958f9b6dd62e541affb7e7d9
      # These errors occur during "examples-laz" because it executes "git clean" to do
      # CASTLE_CONSERVE_DISK_SPACE job.
      #
      - name: Avoid GIT dubious ownership errors
        run: git config --global --add safe.directory /__w/castle-engine/castle-engine

      - name: Build Examples Using Lazarus (FPC / Lazarus Stable)
        run: make clean examples-laz CASTLE_CONSERVE_DISK_SPACE=true

  test-fpc-320:
    name: Base Tests (FPC 3.2.0)
    runs-on: ubuntu-latest
    container: kambi/castle-engine-cloud-builds-tools:cge-none
    steps:
      - uses: actions/checkout@v3
      - name: Set environment
        run: echo "CASTLE_ENGINE_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
      - name: Build Tools (FPC 3.2.0)
        run: source /usr/local/fpclazarus/bin/setup.sh 3.2.0 && make clean default
      - name: Build And Run Auto-Tests (FPC 3.2.0)
        run: source /usr/local/fpclazarus/bin/setup.sh 3.2.0 && make clean tests
      - name: Build Using FpMake (FPC 3.2.0)
        run: source /usr/local/fpclazarus/bin/setup.sh 3.2.0 && make clean test-fpmake

  test-fpc-320-examples:
    name: Examples (FPC 3.2.0)
    runs-on: ubuntu-latest
    container: kambi/castle-engine-cloud-builds-tools:cge-none
    steps:
      - uses: actions/checkout@v3
      - name: Set environment
        run: echo "CASTLE_ENGINE_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
      - name: Build Examples (FPC 3.2.0)
        run: source /usr/local/fpclazarus/bin/setup.sh 3.2.0 && make clean examples CASTLE_CONSERVE_DISK_SPACE=true

  test-fpc-320-examples-laz:
    name: Examples Using Lazarus (FPC 3.2.0)
    runs-on: ubuntu-latest
    container: kambi/castle-engine-cloud-builds-tools:cge-none
    steps:
      - uses: actions/checkout@v3
      - name: Set environment
        run: echo "CASTLE_ENGINE_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
      # Avoids GIT errors
      #   fatal: detected dubious ownership in repository at '/__w/castle-engine/castle-engine'
      # See comment at test-fpc-stable-examples-laz for more info.
      - name: Avoid GIT dubious ownership errors
        run: git config --global --add safe.directory /__w/castle-engine/castle-engine
      - name: Build Examples Using Lazarus (FPC 3.2.0)
        run: source /usr/local/fpclazarus/bin/setup.sh 3.2.0 && make clean examples-laz CASTLE_CONSERVE_DISK_SPACE=true

  test-fpc-latest-unstable:
    name: Base Tests (FPC Latest Unstable)
    runs-on: ubuntu-latest
    container: kambi/castle-engine-cloud-builds-tools:cge-none
    steps:
      - uses: actions/checkout@v3
      - name: Set environment
        run: echo "CASTLE_ENGINE_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
      - name: Build Tools (FPC Latest Unstable)
        run: source /usr/local/fpclazarus/bin/setup.sh trunk && make clean default
      - name: Build And Run Auto-Tests (FPC Latest Unstable)
        run: source /usr/local/fpclazarus/bin/setup.sh trunk && make clean tests
      # fpmake compilation with FPC 3.3.1 from 2022-12-27 is broken,
      # TODO investigate and report.
      # - name: Build Using FpMake (FPC Latest Unstable)
      #   run: source /usr/local/fpclazarus/bin/setup.sh trunk && make clean test-fpmake

  test-fpc-latest-unstable-examples:
    name: Examples (FPC Latest Unstable)
    runs-on: ubuntu-latest
    container: kambi/castle-engine-cloud-builds-tools:cge-none
    steps:
      - uses: actions/checkout@v3
      - name: Set environment
        run: echo "CASTLE_ENGINE_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
      - name: Build Examples (FPC Latest Unstable)
        run: source /usr/local/fpclazarus/bin/setup.sh trunk && make clean examples CASTLE_CONSERVE_DISK_SPACE=true

  test-fpc-latest-unstable-examples-laz:
    name: Examples Using Lazarus (FPC Latest Unstable)
    runs-on: ubuntu-latest
    container: kambi/castle-engine-cloud-builds-tools:cge-none
    steps:
      - uses: actions/checkout@v3
      - name: Set environment
        run: echo "CASTLE_ENGINE_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
      # Avoids GIT errors
      #   fatal: detected dubious ownership in repository at '/__w/castle-engine/castle-engine'
      # See comment at test-fpc-stable-examples-laz for more info.
      - name: Avoid GIT dubious ownership errors
        run: git config --global --add safe.directory /__w/castle-engine/castle-engine
      - name: Build Examples Using Lazarus (FPC Latest Unstable)
        run: source /usr/local/fpclazarus/bin/setup.sh trunk && make clean examples-laz CASTLE_CONSERVE_DISK_SPACE=true

  test-everything:
    name: All Tests (without Docker)
    strategy:
      matrix:
        # TODO: windows-latest fails with:
        #    tools/build-tool/castle-engine_compile.sh
        #    Windows Subsystem for Linux has no installed distributions.
        # https://github.com/castle-engine/castle-engine/runs/6219455015?check_suite_focus=true
        #
        # Not using macos-latest as it randomly fails because of timeouts
        # (e.g. https://github.com/castle-engine/castle-engine/actions/runs/2771175624 )
        # Looks like GH hosted macOS runner is just too busy.
        operating-system: [ubuntu-latest]

        # Older Lazarus versions are with unsupported FPC,
        # see https://github.com/marketplace/actions/setup-lazarus-environment .
        #
        # lazbuild from Lazarus 2.0.10 or 2.0.12 may crash, so don't test.
        # See e.g. https://github.com/castle-engine/castle-engine/runs/7275163005?check_suite_focus=true#step:8:4698
        # - EAccessViolation from lazbuild (not FPC).
        lazarus-versions: [stable, 2.2.0]
    runs-on: ${{ matrix.operating-system }}
    steps:
      - uses: actions/checkout@v3
      - name: Install FPC+Lazarus
        uses: gcarreno/setup-lazarus@v3.2.15
        with:
          lazarus-version: ${{ matrix.lazarus-versions }}
      - name: Install Ubuntu dependencies
        if: ${{ matrix.operating-system == 'ubuntu-latest' }}
        run: sudo apt-get --no-install-recommends -y install libgl-dev
      - name: Install macOS dependencies
        if: ${{ matrix.operating-system == 'macos-latest' }}
        run: brew install gnu-sed coreutils
      - name: Set environment
        run: echo "CASTLE_ENGINE_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
      # Enable compilation of LCL applications on new macOS with old Lazarus 2.0.x. Thankfully in Lazarus >= 2.2 this is no longer necessary.
      - name: Set environment on macOS
        if: ${{ matrix.operating-system == 'macos-latest' && matrix.lazarus-versions == '2.0.12' }}
        run: echo "CASTLE_LAZBUILD_OPTIONS=--widgetset=cocoa" >> $GITHUB_ENV
      - name: Build Tools
        run: make clean default
      - name: Build And Run Auto-Tests
        run: make clean tests
      # TODO: Set FPCDIR to make it possible to use fpmake in GH actions
      # - name: Build Using FpMake
      #   run: make clean test-fpmake
      - name: Build Examples
        run: make clean examples CASTLE_CONSERVE_DISK_SPACE=true
      - name: Build Examples Using Lazarus
        run: make clean examples-laz CASTLE_CONSERVE_DISK_SPACE=true

  pack:
    name: Pack to zip
    runs-on: ubuntu-latest
    container: kambi/castle-engine-cloud-builds-tools:cge-none
    steps:
      - uses: actions/checkout@v3
      - name: Set environment
        run: echo "CASTLE_ENGINE_PATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
      - name: Remove previous artifacts
        run: rm -f castle-engine*.zip
      - name: Pack
        run: ./tools/internal/pack_release/pack_release.sh
