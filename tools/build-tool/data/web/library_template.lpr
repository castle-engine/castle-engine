{
  Copyright 2024-2024 Michalis Kamburelis.

  This file is part of "Castle Game Engine".

  "Castle Game Engine" is free software; see the file COPYING.txt,
  included in the "Castle Game Engine" distribution,
  for details about the copyright.

  "Castle Game Engine" is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

  ----------------------------------------------------------------------------
}

{ Library to run the application the web.

  Why "library" and not "program"?

  - On web, "Application.MainWindow.OpenAndRun" (and "Application.Run" that is
    called underneath) finishes quickly.
    It just makes one frame, and then uses RequestAnimationFrame
    to request callback to do next frame.

    ( This is in contrast to other platforms, where "Application.Run"
    runs the loop, and exits only once the application is closed. )

  - It implies we cannot just finalize everything
    (doings units' finalization that e.g. does Application.Free from CastleWindow)
    when "Application.MainWindow.OpenAndRun" finishes.

  - Library makes this happen. The library keeps being loaded, even when no code
    is running. So Application stays alive, and RequestAnimationFrame callback
    reaches us OK. }
library ${NAME_PASCAL};

uses CastleAutoGenerated, CastleWindow, CastleLog, CastleAutoGenetatedAllFonts,
  ${GAME_UNITS};

begin
  Application.MainWindow.OpenAndRun;
  WritelnLog('WebAssembly library finished initialization, the next frames will be processed when we get RequestAnimationFrame callback.');
end.
