{
  Copyright 2013-2018 Michalis Kamburelis.

  This file is part of "Castle Game Engine".

  "Castle Game Engine" is free software; see the file COPYING.txt,
  included in the "Castle Game Engine" distribution,
  for details about the copyright.

  "Castle Game Engine" is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

  ----------------------------------------------------------------------------
}

{ Library (FPC) or program (Delphi) to run the game on Android. }

{$ifdef FPC} library {$else} program {$endif} ${NAME_PASCAL};

uses
  {$ifdef FPC}
  { CastleAndroidNativeAppGlue must be the 1st unit on uses clause,
    as it uses CThreads that must be loaded before any memory allocation happens. }
  CastleAndroidNativeAppGlue,
  {$endif}

  { CastleAutoGenerated must be used before GAME_UNITS, so that it can do InitializeLog
    before any user unit "initialization" runs. }
  CastleAutoGenerated,

  {$ifdef FPC} CastleMessaging, CastleSystemLanguage,
  {$else} CastleWindow,
  {$endif}

  ${GAME_UNITS};

{ Qualify identifiers by unit names in everything below
  (both FPC "exports" and Delphi program code)
  to prevent anything in GAME_UNITS from changing the meaning of code below. }

{$ifdef FPC}
{ For FPC, this is a library exporting some symbols expected by our Java
  integration code. }
exports
  CastleMessaging.Java_io_castleengine_MainActivity_jniMessage,
  CastleSystemLanguage.Java_io_castleengine_MainActivity_jniLanguage,
  CastleAndroidNativeAppGlue.ANativeActivity_onCreate;
{$else}
begin
  { For Delphi, this just runs a CastleWindow application,
    which underneath runs just FMX application (through CASTLE_WINDOW_FORM
    backend of CastleWindow, see https://castle-engine.io/castlewindow_backends ). }
  CastleWindow.Application.MainWindow.OpenAndRun;
{$endif}
end.
