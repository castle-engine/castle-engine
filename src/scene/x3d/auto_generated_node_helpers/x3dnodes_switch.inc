{ -*- buffer-read-only: t -*-

  Copyright 2015-2023 Michalis Kamburelis.

  This file is part of "Castle Game Engine".

  "Castle Game Engine" is free software; see the file COPYING.txt,
  included in this distribution, for details about the copyright.

  "Castle Game Engine" is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

  ----------------------------------------------------------------------------
}

{ Automatically generated node properties.

  Do not edit this file manually!
  To add new properties:
  - add them to the text files in tools/internal/x3d-nodes-to-pascal/nodes-specification/ ,
  - and regenerate include files by running x3d-nodes-to-pascal }

{$ifdef read_interface}

  strict private
    function GetWhichChoice: Integer;
    procedure SetWhichChoice(const Value: Integer);
  public
    procedure CreateNode; override;
    class function ClassX3DType: string; override;

    strict private FFdWhichChoice: TSFInt32;
    { Internal wrapper for property @link(WhichChoice). This wrapper API may change, we advise to access simpler @link(WhichChoice) instead. }
    public property FdWhichChoice: TSFInt32 read FFdWhichChoice;
    {  }
    property WhichChoice: Integer read GetWhichChoice write SetWhichChoice;

{$endif read_interface}

{$ifdef read_implementation}

{ TSwitchNode ----------------------------------------------- }

function TSwitchNode.GetWhichChoice: Integer;
begin
  Result := FdWhichChoice.Value;
end;

procedure TSwitchNode.SetWhichChoice(const Value: Integer);
begin
  FdWhichChoice.Send(Value);
end;

class function TSwitchNode.ClassX3DType: String;
begin
  Result := 'Switch';
end;

procedure TSwitchNode.CreateNode;
begin
  inherited;

  FFdWhichChoice := TSFInt32.Create(Self, True, 'whichChoice', -1);
   FdWhichChoice.ChangeAlways := chSwitch2;
  AddField(FFdWhichChoice);
end;

{$endif read_implementation}
