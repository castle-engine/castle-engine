# Customize messages displayed by FPC.
#
# FPC emits some messages that are unfortunately useless and unavoidable
# in user code.
# This is especially true for specializatoin of generic containers
# in FPC <= 3.2.2 (was solved in 3.3.1: https://gitlab.com/freepascal.org/fpc/source/-/issues/40222 ).
# So we hide them, by using proper -vmXXX options.
#
# Why like this?
#
# - We hide messages selectively, by -vmXXX.
#   We don't want to unconditionally hide all FPC warnings,
#   as many FPC warnings are very useful to easily spot code problems.
#   We also don't want to train our eyes to ignore the warnings :),
#   which would happen if the output would be flooded by useless warnings.
#   Our applications should have a "clean" output from FPC,
#   with warnings + notes enabled.
#
# - Note that -vmXXXX has to be used conditionally, looking at FPC version,
#   for some messages. Otherwise older FPC versions would fail when they see
#   unrecognized -vmXXXX message.
#   The currently supported FPC versions by CGE are documented on
#   https://castle-engine.io/supported_compilers.php .
#
# - This is a subset of castle-fpc.cfg, useful to refer to from Lazarus LPI/LPK.
#   Using a common cfg file allows to share this logic between various LPI/LPK files.
#   Also, in Lazarus LPI it seems not possible to use stuff like
#   "if GetProjValue('FPC_FULLVERSION') >= 30101 then" in "Common options"
#   (although it works in Lazarus LPK).
#
# Note that Castle Game Engine build tool
# (see https://castle-engine.io/build_tool )
# has better filtering implementation,
# and instead of using -vmXXX it can (in some cases) filter out specific cases
# related to Generics.Collections.
# Our build tool doesn't use this cfg file.
#
# ----------------------------------------------------------------------------

# do not show Warning: (2045) APPTYPE is not supported by the target OS
-vm2045
# do not show Hint: (5024) Parameter "..." not used
-vm5024

#IFDEF VER3_2
# do not show
# Warning: Constructing a class "TCustomDictionaryEnumerator$4$crc6100464F" with abstract method "GetCurrent"
# Warning: Constructing a class "TCustomDictionaryEnumerator$4$crcBD4794B2" with abstract method "DoMoveNext"
#
# Submitted as https://bugs.freepascal.org/view.php?id=32142
# and https://gitlab.com/freepascal.org/fpc/source/-/issues/40222 .
# Solved now in FPC 3.3.1, so this is only needed with FPC 3.2.x
# (CGE does not support older FPC, see https://castle-engine.io/supported_compilers.php ).
-vm04046

# do not show
# Note: Private type "TCustomPointersEnumerator$2<CASTLEVECTORSINTERNALSINGLE.TGenericVector2,CASTLEVECTORS.TCustomList$1$crc1D7BB6F0.PT>.T" never used
#
# Submitted as https://gitlab.com/freepascal.org/fpc/source/-/issues/40222 .
# Solved now in FPC 3.3.1, so this is only needed with FPC 3.2.x
# (CGE does not support older FPC, see https://castle-engine.io/supported_compilers.php ).
-vm5071

# do not show Warning: Symbol "TArrayHelper$1" is experimental
# Solved in FPC 3.3.1 , does not emit this warning.
-vm05063
#ENDIF

#IFNDEF VER2
#IFNDEF VER3_0

#IFNDEF VER3_1

# do not show
# Note:  Call to subroutine "function TGenericVector3.Length:Single;" marked as inline is not inlined
# (In FPC 3.3.1, not in FPC 3.1.1 rev 38027)
#
# Submitted as https://gitlab.com/freepascal.org/fpc/source/-/issues/40222
# for Generics.Collections, and solved for this case.
# But it also affects us in other cases, unrelated to Generics.Collections.
-vm6058

# do not show
# Warning: Local variable "$1" of a managed type does not seem to be initialized
# (a lot of false warnings since FPC 3.3.1)
-vm5089

# do not show
# Warning: Variable "OutputFace" of a managed type does not seem to be initialized
# (3 false warnings since FPC 3.3.1 in Kraft)
-vm5090

# do not show
# Warning: function result variable of a managed type does not seem to be initialized
# (a lot of false warnings since FPC 3.3.1)
-vm5093

#ENDIF

#ENDIF
#ENDIF
